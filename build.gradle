buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.bcg.dv'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
    groovyVersion = '2.4.13'
    retrofitVersion = '2.3.0'
    springfoxVersion = '2.8.0'
}

dependencies {
	compile("com.squareup.retrofit2:retrofit:${retrofitVersion}")
	compile("com.squareup.retrofit2:converter-jackson:${retrofitVersion}")
	compile("io.springfox:springfox-swagger2:${springfoxVersion}")
	compile("io.springfox:springfox-swagger-ui:${springfoxVersion}")
    compile("org.codehaus.groovy:groovy:${groovyVersion}")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
    compile('org.springframework.boot:spring-boot-starter-jetty')
	runtime('com.h2database:h2')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.spockframework:spock-spring')
}

task bootRunDev(type: org.springframework.boot.gradle.run.BootRunTask) {
	group 'Application'
	description 'Runs the project with development profile.'

	doFirst() {
		main = project.mainClassName
		classpath = sourceSets.main.runtimeClasspath
		args = ['--spring.profiles.active=dev']
		jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=n']
	}
}

task bootRunTest(type: org.springframework.boot.gradle.run.BootRunTask) {
	group 'Application'
	description 'Runs the project with test profile.'

	doFirst() {
		main = project.mainClassName
		classpath = sourceSets.main.runtimeClasspath
		args = ['--spring.profiles.active=test']
	}
}

task bootRunPro(type: org.springframework.boot.gradle.run.BootRunTask) {
	group 'Application'
	description 'Runs the project with production profile.'

	doFirst() {
		main = project.mainClassName
		classpath = sourceSets.main.runtimeClasspath
		args = ['--spring.profiles.active=pro']
	}
}

bootRun {
	args = ["--spring.profiles.active=pro"]
}

bootRepackage {
	mainClass = 'com.bcg.dv.BootplateApplication'
}